# time complexity is O(n)
# space complexity is O(1)

def dutch_flag_partition(pivot_index,arr):
    
    pivot = arr[pivot_index]
    smaller = 0
    for i in range(len(arr)): 
        if arr[i] < pivot:
            arr[i],arr[smaller],arr[smaller],arr[i]
            smaller += 1
            
    # second pass: group elements larger than pivot
    larger = len(arr)
    for i in reversed(range(len(arr))): 
        if arr[i] < pivot :
            break
            
        elif arr[i] > pivot:
            larger -= 1
            arr[i],arr[larger] = arr[larger] ,arr[i]
            
            
    return arr
            
